<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ColinChang.RedisHelper</name>
    </assembly>
    <members>
        <member name="M:ColinChang.RedisHelper.RedisHelper.PeekRangeAsync``1(System.String,System.Int64,System.Int64)">
            <summary>
            从队列中读取数据而不出队
            </summary>
            <param name="key"></param>
            <param name="start">起始位置</param>
            <param name="stop">结束位置</param>
            <typeparam name="T">对象类型</typeparam>
            <returns>不指定 start、end 则获取所有数据</returns>
        </member>
        <member name="M:ColinChang.RedisHelper.RedisHelper.SortedSetRangeByRankWithScoresAsync(System.String,System.Int64,System.Int64,StackExchange.Redis.Order)">
            <summary>
            按序返回topN
            </summary>
            <param name="key"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:ColinChang.RedisHelper.RedisHelper.KeyDeleteAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            删除给定Key
            </summary>
            <param name="keys">待删除的key集合</param>
            <returns>删除key的数量</returns>
        </member>
        <member name="M:ColinChang.RedisHelper.RedisHelper.KeyExpireAsync(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            设置指定key过期时间
            </summary>
            <param name="key"></param>
            <param name="expiry"></param>
            <returns></returns>
        </member>
        <member name="M:ColinChang.RedisHelper.RedisHelper.ExecuteBatchAsync(System.Action[])">
            <summary>
            批量执行Redis操作
            </summary>
            <param name="operations"></param>
        </member>
        <member name="M:ColinChang.RedisHelper.RedisHelper.LockExecuteAsync(System.String,System.String,System.Delegate,System.TimeSpan,System.Object[])">
            <summary>
            获取分布式锁并执行(非阻塞。加锁失败直接返回(false,null))
            </summary>
            <param name="key">要锁定的key</param>
            <param name="value">锁定的value，加锁时赋值value，在解锁时必须是同一个value的客户端才能解锁</param>
            <param name="del">加锁成功时执行的业务方法</param>
            <param name="expiry">持锁超时时间。超时后锁自动释放</param>
            <param name="args">业务方法参数</param>
            <returns>(success,return value of the del)</returns>
        </member>
        <member name="M:ColinChang.RedisHelper.RedisHelper.LockExecute(System.String,System.String,System.Delegate,System.Object@,System.TimeSpan,System.Int32,System.Object[])">
            <summary>
            获取分布式锁并执行(阻塞。直到成功加锁或超时)
            </summary>
            <param name="key">要锁定的key</param>
            <param name="value">锁定的value，加锁时赋值value，在解锁时必须是同一个value的客户端才能解锁</param>
            <param name="del">加锁成功时执行的业务方法</param>
            <param name="result">del返回值</param>
            <param name="expiry">持锁超时时间。超时后锁自动释放</param>
            <param name="timeout">加锁超时时间(ms).0表示永不超时</param>
            <param name="args">业务方法参数</param>
            <returns>success</returns>
        </member>
    </members>
</doc>
